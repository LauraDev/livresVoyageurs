{# This page inherits from base.html #}
{% extends 'layout.html.twig' %}

{# Define Title #}
{% block title %} Histoire de votre livre {% endblock %}

{#  Breadcrumb trail #}
{% set active_page = 'Espace' %}


{# Define Content #}
{% block content %}

    <div class="row">

        <h1> Histoire de votre livre </h1>

        <div id="map"></div>

    </div>
    {% for stor in story %}
        <div class="startpoint ">
            <p class="lat_startpoint">{{ stor.lat_startpoint }}</p>
            <p class="lng_startpoint">{{ stor.lng_startpoint }}</p>
            <p class="city_startpoint">{{ stor.city_startpoint }}</p>
            <p class="pseudo_startpoint">{{ stor.pseudo_member }}</p>
            <p class="date_startpoint">{{ stor.date_book | date('d/m/Y') }}</p>
            <p class="avatar_startpoint">{{ stor.avatar_member }}</p>

        </div>
        {% if not stor.lat_pointer == 0 %}
            <div class="pointer">
                <p class="lat_pointer">{{ stor.lat_pointer }}</p>
                <p class="lng_pointer">{{ stor.lng_pointer  }}</p>
                <p class="city_pointer">{{ stor.city_pointer }}</p>
                <p class="pseudo_pointer">{{ stor.pseudo_captures }}</p>
                <p class="date_pointer">{{ stor.date_pointer | date('d/m/Y') }}</p>
                <p class="avatar_pointer">{{ stor.avatar_captures }}</p>
            </div>
        {% endif %}
    {% endfor %}
{% endblock %}


{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{asset('assets/css/infowindow.css')}}">

{% endblock %}


{% block javascripts %}
    {{ parent() }}
    <script src="{{asset('assets/js/infobubble.js')}}" charset="utf-8"></script>
    <script>
        $(document).ready(function() {

            // variable pour la carte
            var map;
            // Hide pointers data
            $('.startpoint').hide()
            $('.pointer').hide()

            //fonction init pour executer l'API par google
            function init() {

                var bounds  = new google.maps.LatLngBounds();
                var loc;
                // Define where to postion the map
                var mapDiv = document.getElementById('map');
                // Lat / lng startpoint
                var latStart =  Number($('.lat_startpoint').eq(0).html())
                var lngStart = Number($('.lng_startpoint').eq(0).html())
                var latlng = {lat: Number($('.lat_startpoint').html()), lng:Number($('.lng_startpoint').html()) };
                // Get lat and lng for other markers (captures)
                var pointer = document.getElementsByClassName('pointer')

                // Map creation
                map = new google.maps.Map(mapDiv, {
                    styles: [
                        {"featureType": "landscape.natural", "elementType": "geometry.fill", "stylers": [{"visibility": "on"},{"color": "#e0efef"}]},
                        {"featureType": "poi", "elementType": "geometry.fill", "stylers": [{"visibility": "on"},{"hue": "#1900ff"},{"color": "#c0e8e8"}]},
                        {"featureType": "road", "elementType": "geometry", "stylers": [{"lightness": 100},{"visibility": "simplified"}]},
                        {"featureType": "road", "elementType": "labels", "stylers": [{"visibility": "off"}]},
                        {"featureType": "transit.line", "elementType": "geometry", "stylers": [{"visibility": "on"}, {"lightness": 700}]},
                        {"featureType": "water", "elementType": "all", "stylers": [{"color": "#7dcdcd"}]}
                    ]
                })

                var contentStart =
                    '<div class="iw-container">'+
                        '<div class="iw-title">'+
                            '<h1 class="text-center">Point de départ : ' +$('.city_startpoint').html() + '</h1>' +
                        '</div>'+
                        '<div class="row">' +
                            '<img class="col-xs-4 img" src="/livresVoyageurs/public/assets/images/avatar/' + $('.avatar_startpoint').html() +'" alt="Avatar membre" />' +
                            '<div class="col-xs-8">'+
                                '<h2>' + $('.pseudo_startpoint').html() + '</h2>' +
                            '</div>'+
                        '</div>'
                    '</div>'

                    // '<h1>Point de départ</h1>' +
                    // '<div class="row">' +
                    //     '<img class="col-xs-7 img" src="/livresVoyageurs/public/assets/images/avatar/' + $('.avatar_startpoint').html() +'" style="width:65px; height:auto" alt="Avatar membre" />' +
                    //     '<div class="col-sm-4">'+
                    //         '<h2>' + $('.city_startpoint').html() +'</h2>' +
                    //         '<h2>' + $('.pseudo_startpoint').html() + '</h2>' +
                    //     '</div>'+
                    // '</div>'
                // Create startpoint marker
                var marker =  new google.maps.Marker({
                    position: latlng,
                    map: map,
                    //Tooltip
                    title: 'Départ du livre',
                    content: contentStart
                })
                    loc = new google.maps.LatLng(marker.position.lat(), marker.position.lng());
                    bounds.extend(loc);
                var infowindow = new google.maps.InfoWindow({
                    content: contentStart,
                    maxWidth: 350
                });
                // ajout de la boite d'info et du listener
                marker.addListener('click', function() {
                    infowindow.open(map, marker);
                });
                infowindow.open(map, marker);

                var pos;
                var posCapt= [];

                // Create captures markers
                for (var i = 0; i < pointer.length; i++) {

                var latPoint = Number($('.lat_pointer').eq(i).html())
                var lngPoint = Number($('.lng_pointer').eq(i).html())
                    var markers = [];
                    var pos = new google.maps.LatLng( latPoint , lngPoint);
                    var contentCapture =
                        '<div class="iw-container">'+
                            '<div class="iw-title">'+
                            '<h1 class="text-center">Capturé le : '+ $('.date_pointer').eq(i).html() +'</h1>' +
                            '</div>'+
                            '<div class="row">' +
                                '<img class="col-xs-4 img" src="/livresVoyageurs/public/assets/images/avatar/' + $('.avatar_pointer').html() +'" alt="Avatar membre" />' +
                                '<div class="col-xs-8">'+
                                    '<h2>Par : ' + $('.pseudo_pointer').html() + '</h2>' +
                                    '<h3>' + $('.city_pointer').eq(i).html() +'</h3>' +
                                '</div>'+
                            '</div>'
                        '</div>'

                        // '<h1>Capturé le:<br>'+ $('.date_pointer').eq(i).html() +'</h1>' +
						// '<div class="row">' +
                        //     '<img class="col-sm-7 img img-responsive" src="/livresVoyageurs/public/assets/images/avatar/' + $('.avatar_pointer').eq(i).html() + '" style="width:65px; height:auto" alt="Avatar Membre" />'+
                        //     '<div class="col-sm-4">'+
                        //         '<h2>' + $('.city_pointer').eq(i).html() +'</h2>' +
                        //         '<h2>' + $('.pseudo_pointer').eq(i).html() + '</h2>' +
                        //     '</div>'+
                        // '</div>'
                    // Create captures marker
                    markers[i] = new google.maps.Marker({
                        position: pos,
                        map: map,
                        id: i+1,
                        title: 'Voyage n:',
                        content: contentCapture
                    });
                    // Define markers infos
                    var infowindow = new google.maps.InfoWindow({
                        content: contentCapture,
                        maxWidth: 350
                    });
                    // add listener
                    markers[i].addListener('click', function() {
                        infowindow.open(map, markers[i]);
                    });
                    infowindow.open(map, markers[i]);

                    // Marker position
                    posCapt[0] = {lat: latStart , lng: lngStart }
                    posCapt[i] = {lat:latPoint , lng:lngPoint};

                    // Extend bounds
                    loc[i] = {lat:latPoint , lng:lngPoint};
                    bounds.extend(loc[i]);

                } // loop end


                // alert(JSON.stringify(loc))

                // Lines between marker: Follow the path
                var flightPath = new google.maps.Polyline({
                path: posCapt,
                geodesic: true,
                strokeColor: '#FF0000',
                strokeOpacity: 1.0,
                strokeWeight: 2
                });
                flightPath.setMap(map);

                // Automatically zoom and center the map (include all markers inside the map)
                map.fitBounds(bounds);       // auto-zoom
                map.panToBounds(bounds);     // auto-center

                google.maps.event.addListener(infowindow, 'domready', function() {

                    // Reference to the DIV which receives the contents of the infowindow using jQuery
                    var iwOuter = $('.gm-style-iw');

                    /* The DIV we want to change is above the .gm-style-iw DIV.
                    * So, we use jQuery and create a iwBackground variable,
                    * and took advantage of the existing reference to .gm-style-iw for the previous DIV with .prev().
                    */
                    var iwBackground = iwOuter.prev();
                    // Remove the background shadow DIV
                    iwBackground.children(':nth-child(2)').css({'display' : 'none'});
                    // Remove the white background DIV
                    iwBackground.children(':nth-child(4)').css({'display' : 'none'});
                    // Reference to the div that groups the close button elements.
                    var iwCloseBtn = iwOuter.next();

                    iwCloseBtn.css({
                        opacity: '1', // by default the close button has an opacity of 0.7
                        right: '38px',
                        top: '3px', // button repositioning
                        border: '10px solid #48b5e9', // increasing button border and new color
                        'border-radius': '13px', // circular effect
                        'box-shadow': '0 0 5px #3990B9' // 3D effect to highlight the button
                    });

                    iwCloseBtn.mouseout(function(){
                      $(this).css({opacity: '1'});
                    });
                });


            } // init() end
            // load map on window load
            google.maps.event.addDomListener(window, 'load', init);

        }) // document ready
    </script>


{% endblock %}
